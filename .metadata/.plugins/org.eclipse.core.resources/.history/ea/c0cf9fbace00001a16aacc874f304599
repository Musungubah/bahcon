package com.bah.msd.controller;

import java.net.URI;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;
import org.springframework.web.util.UriComponentsBuilder;

import com.bah.msd.model.Customer;
import com.bah.msd.model.Event;
import com.bah.msd.repository.EventRepository;

@RestController
@RequestMapping("/events")
public class EventController {
	
	@Autowired
	EventRepository repo;
	
	@GetMapping
	public Iterable<Event> getAll(){
		return repo.findAll();
	}
	
	@GetMapping("/{EventId}")
	public Optional<Event> getCustomerById(@PathVariable("customerId") long id){
		return repo.findById(id);
	}
	
	@PostMapping
	public ResponseEntity<?> addEvent(@RequestBody Event newEvent,
			UriComponentsBuilder uri){
		if(newEvent.getId() != 0 || newEvent.getName() == null 
				|| newEvent.getDate() == null) {
			return ResponseEntity.badRequest().build();
		}
		
		newEvent=repo.save(newEvent);
		URI location=ServletUriComponentsBuilder.fromCurrentRequest()
				.path("/{id}").buildAndExpand(newEvent.getId()).toUri();
		
		ResponseEntity<?> response=ResponseEntity.created(location).build();
		return response;
	}
	
	@PutMapping("/{EventId}")
	public ResponseEntity<?> putCustomer(@RequestBody Customer newCustomer, 
			@PathVariable("customerId") long customerId){
		if(newCustomer.getId() != customerId|| newCustomer.getName() == null 
				|| newCustomer.getEmail() == null) {
			return ResponseEntity.badRequest().build();
		}
		newCustomer = repo.save(newCustomer);
		return ResponseEntity.ok().build();
	}
	
}
